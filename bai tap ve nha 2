using System;
using System.Collections.Generic;
using System.Linq;

namespace StudentManagementLINQ
{
    
    class Student
    {
        public int Id { get; set; }
        public required string Name { get; set; }
        public int Age { get; set; }

        public override string ToString()
        {
            return $"ID: {Id}, Name: {Name}, Age: {Age}";
        }
    }

    class Program
    {
        static void Main(string[] args)
        {
            
            Console.OutputEncoding = System.Text.Encoding.UTF8;

            
            List<Student> students = new List<Student>()
            {
                new Student{Id = 1, Name = "An", Age = 16},
                new Student{Id = 2, Name = "Bình", Age = 18},
                new Student{Id = 3, Name = "Cường", Age = 20},
                new Student{Id = 4, Name = "Anh", Age = 15},
                new Student{Id = 5, Name = "Dũng", Age = 17}
            };

           
            Console.WriteLine("a. Danh sách toàn bộ học sinh:");
            students.ForEach(s => Console.WriteLine(s));
            Console.WriteLine();

            
            var hs1518 = from s in students
                         where s.Age >= 15 && s.Age <= 18
                         select s;
            Console.WriteLine("b. Học sinh có tuổi từ 15 đến 18:");
            foreach (var s in hs1518)
                Console.WriteLine(s);
            Console.WriteLine();

           
            var hsA = from s in students
                      where s.Name.StartsWith("A")
                      select s;
            Console.WriteLine("c. Học sinh có tên bắt đầu bằng chữ A:");
            foreach (var s in hsA)
                Console.WriteLine(s);
            Console.WriteLine();

          
            int tongTuoi = (from s in students select s.Age).Sum();
            Console.WriteLine($"d. Tổng tuổi của tất cả học sinh: {tongTuoi}");
            Console.WriteLine();

            
            int maxAge = (from s in students select s.Age).Max();
            var hsMaxAge = from s in students
                           where s.Age == maxAge
                           select s;
            Console.WriteLine("e. Học sinh có tuổi lớn nhất:");
            foreach (var s in hsMaxAge)
                Console.WriteLine(s);
            Console.WriteLine();

           
            var sapXep = from s in students
                         orderby s.Age
                         select s;
            Console.WriteLine("f. Danh sách sắp xếp theo tuổi tăng dần:");
            foreach (var s in sapXep)
                Console.WriteLine(s);

            Console.ReadKey(); // giữ màn hình console
        }
    }
}
